{"mappings":"AAAE,CAAA,WAAY;IAEb,MAAM,eAAe,kBAAkB,AAAC,EAAC,wBAAwB;IAEjE,MAAM,yBAAyB,aAAa,AAAC,EAAC,uBAAuB;IAErE,MAAM,qBAAqB,aAAa,AAAC,EAAC,kBAAkB;IAE5D,MAAM,gBAAgB,aAAa,AAAC;IAEpC,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,AAAC;IAEhC,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,AAAC;IAEhC,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,AAAC;IAEhC,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,AAAC;IAEhC,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,AAAC;IAEhC,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,AAAC;IAEjC,SAAS,WAAW,GAAG;QAEtB,MAAM,KAAK,GAAG;YACb,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,EAAE;YACV,QAAQ,EAAE,EAAE;YACZ,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,EAAE;YACV,GAAG,EAAE,EAAE;YACP,SAAS,EAAE,EAAE;YACb,iBAAiB,EAAE,EAAE;YACrB,WAAW,EAAE,SAAW,KAAI,EAAE,eAAe,EAAG;gBAE/C,yFAAyF;gBACzF,2EAA2E;gBAC3E,IAAK,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,KAAK,KAAK,EAAG;oBAE3D,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,KAAI,CAAC;oBACxB,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,eAAe,KAAK,KAAK,CAAC;oBACxD,OAAO;iBAEP;gBAED,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,KAAK,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,GAAG,SAAS,AAAC;gBAEtI,IAAK,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,UAAU,EAE9D,IAAI,CAAC,MAAM,CAAC,SAAS,CAAE,IAAI,CAAE,CAAC;gBAI/B,IAAI,CAAC,MAAM,GAAG;oBACb,IAAI,EAAE,KAAI,IAAI,EAAE;oBAChB,eAAe,EAAE,eAAe,KAAK,KAAK;oBAC1C,QAAQ,EAAE;wBACT,QAAQ,EAAE,EAAE;wBACZ,OAAO,EAAE,EAAE;wBACX,MAAM,EAAE,EAAE;wBACV,GAAG,EAAE,EAAE;wBACP,YAAY,EAAE,KAAK;qBACnB;oBACD,SAAS,EAAE,EAAE;oBACb,MAAM,EAAE,IAAI;oBACZ,aAAa,EAAE,SAAW,IAAI,EAAE,SAAS,EAAG;wBAE3C,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAE,KAAK,CAAE,AAAC,EAAC,yFAAyF;wBACnI,uFAAuF;wBAGvF,IAAK,QAAQ,IAAM,CAAA,QAAQ,CAAC,SAAS,IAAI,QAAQ,CAAC,UAAU,IAAI,CAAC,CAAA,AAAE,EAElE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAE,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAE,CAAC;wBAI5C,MAAM,QAAQ,GAAG;4BAChB,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM;4BAC5B,IAAI,EAAE,IAAI,IAAI,EAAE;4BAChB,MAAM,EAAE,KAAK,CAAC,OAAO,CAAE,SAAS,CAAE,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,SAAS,CAAE,SAAS,CAAC,MAAM,GAAG,CAAC,CAAE,GAAG,EAAE;4BACnG,MAAM,EAAE,QAAQ,KAAK,SAAS,GAAG,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;4BAC9D,UAAU,EAAE,QAAQ,KAAK,SAAS,GAAG,QAAQ,CAAC,QAAQ,GAAG,CAAC;4BAC1D,QAAQ,EAAE,EAAG;4BACb,UAAU,EAAE,EAAG;4BACf,SAAS,EAAE,KAAK;4BAChB,KAAK,EAAE,SAAW,KAAK,EAAG;gCAEzB,MAAM,MAAM,GAAG;oCACd,KAAK,EAAE,OAAO,KAAK,KAAK,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,KAAK;oCACrD,IAAI,EAAE,IAAI,CAAC,IAAI;oCACf,MAAM,EAAE,IAAI,CAAC,MAAM;oCACnB,MAAM,EAAE,IAAI,CAAC,MAAM;oCACnB,UAAU,EAAE,CAAC;oCACb,QAAQ,EAAE,EAAG;oCACb,UAAU,EAAE,EAAG;oCACf,SAAS,EAAE,KAAK;iCAChB,AAAC;gCACF,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;gCACzC,OAAO,MAAM,CAAC;6BAEd;yBACD,AAAC;wBACF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,QAAQ,CAAE,CAAC;wBAChC,OAAO,QAAQ,CAAC;qBAEhB;oBACD,eAAe,EAAE,WAAY;wBAE5B,IAAK,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAE7B,OAAO,IAAI,CAAC,SAAS,CAAE,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC;wBAIpD,OAAO,SAAS,CAAC;qBAEjB;oBACD,SAAS,EAAE,SAAW,GAAG,EAAG;wBAE3B,MAAM,iBAAiB,GAAG,IAAI,CAAC,eAAe,EAAE,AAAC;wBAEjD,IAAK,iBAAiB,IAAI,iBAAiB,CAAC,QAAQ,KAAK,EAAG,EAAG;4BAE9D,iBAAiB,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;4BAC/D,iBAAiB,CAAC,UAAU,GAAG,iBAAiB,CAAC,QAAQ,GAAG,iBAAiB,CAAC,UAAU,CAAC;4BACzF,iBAAiB,CAAC,SAAS,GAAG,KAAK,CAAC;yBAEpC,CAAC,gGAAgG;wBAGlG,IAAK,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAG;4BAEvC,IAAM,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAG,CAEvD,IAAK,IAAI,CAAC,SAAS,CAAE,EAAE,CAAE,CAAC,UAAU,IAAI,CAAC,EAExC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAE,EAAE,EAAE,CAAC,CAAE,CAAC;yBAMjC,CAAC,8FAA8F;wBAGhG,IAAK,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAEtC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE;4BACpB,IAAI,EAAE,EAAE;4BACR,MAAM,EAAE,IAAI,CAAC,MAAM;yBACnB,CAAE,CAAC;wBAIL,OAAO,iBAAiB,CAAC;qBAEzB;iBACD,CAAC,CAAC,qCAAqC;gBACxC,sGAAsG;gBACtG,wFAAwF;gBACxF,6FAA6F;gBAC7F,8FAA8F;gBAE9F,IAAK,gBAAgB,IAAI,gBAAgB,CAAC,IAAI,IAAI,OAAO,gBAAgB,CAAC,KAAK,KAAK,UAAU,EAAG;oBAEhG,MAAM,QAAQ,GAAG,gBAAgB,CAAC,KAAK,CAAE,CAAC,CAAE,AAAC;oBAC7C,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;oBAC1B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAE,QAAQ,CAAE,CAAC;iBAEvC;gBAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;aAEjC;YACD,QAAQ,EAAE,WAAY;gBAErB,IAAK,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,UAAU,EAE9D,IAAI,CAAC,MAAM,CAAC,SAAS,CAAE,IAAI,CAAE,CAAC;aAI/B;YACD,gBAAgB,EAAE,SAAW,KAAK,EAAE,GAAG,EAAG;gBAEzC,MAAM,KAAK,GAAG,QAAQ,CAAE,KAAK,EAAE,EAAE,CAAE,AAAC;gBACpC,OAAO,AAAE,CAAA,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,CAAA,GAAK,CAAC,CAAC;aAExD;YACD,gBAAgB,EAAE,SAAW,KAAK,EAAE,GAAG,EAAG;gBAEzC,MAAM,KAAK,GAAG,QAAQ,CAAE,KAAK,EAAE,EAAE,CAAE,AAAC;gBACpC,OAAO,AAAE,CAAA,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,CAAA,GAAK,CAAC,CAAC;aAExD;YACD,YAAY,EAAE,SAAW,KAAK,EAAE,GAAG,EAAG;gBAErC,MAAM,KAAK,GAAG,QAAQ,CAAE,KAAK,EAAE,EAAE,CAAE,AAAC;gBACpC,OAAO,AAAE,CAAA,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,CAAA,GAAK,CAAC,CAAC;aAExD;YACD,SAAS,EAAE,SAAW,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;gBAE/B,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,AAAC;gBAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,AAAC;gBAC1C,GAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;gBACrD,GAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;gBACrD,GAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;aAErD;YACD,cAAc,EAAE,SAAW,CAAC,EAAG;gBAE9B,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,AAAC;gBAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,AAAC;gBAC1C,GAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;aAErD;YACD,aAAa,EAAE,SAAW,CAAC,EAAG;gBAE7B,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,AAAC;gBAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,AAAC;gBAC1C,GAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;aAErD;YACD,SAAS,EAAE,SAAW,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;gBAE/B,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,AAAC;gBACzB,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,AAAC;gBACzC,GAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;gBACrD,GAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;gBACrD,GAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;aAErD;YACD,aAAa,EAAE,SAAW,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;gBAEnC,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,AAAC;gBAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,AAAC;gBAEzC,GAAG,CAAC,SAAS,CAAE,GAAG,EAAE,CAAC,CAAE,CAAC;gBAExB,GAAG,CAAC,SAAS,CAAE,GAAG,EAAE,CAAC,CAAE,CAAC;gBAExB,GAAG,CAAC,SAAS,CAAE,GAAG,EAAE,CAAC,CAAE,CAAC;gBAExB,GAAG,CAAC,UAAU,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;gBAE3B,GAAG,CAAC,UAAU,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;gBAE3B,GAAG,CAAC,KAAK,CAAE,GAAG,CAAE,CAAC;gBAEjB,GAAG,CAAC,SAAS,EAAE,CAAC;gBAEhB,GAAG,CAAC,IAAI,CAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAE,CAAC;gBAChC,GAAG,CAAC,IAAI,CAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAE,CAAC;gBAChC,GAAG,CAAC,IAAI,CAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAE,CAAC;aAEhC;YACD,QAAQ,EAAE,SAAW,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;gBAE9B,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,AAAC;gBACxB,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,AAAC;gBACxC,IAAK,GAAG,CAAE,CAAC,CAAE,KAAK,SAAS,EAAG,GAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;gBACnF,IAAK,GAAG,CAAE,CAAC,CAAE,KAAK,SAAS,EAAG,GAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;gBACnF,IAAK,GAAG,CAAE,CAAC,CAAE,KAAK,SAAS,EAAG,GAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;aAEnF;YACD,KAAK,EAAE,SAAW,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;gBAE3B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,AAAC;gBACrB,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,AAAC;gBACrC,GAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;gBACvC,GAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;gBACvC,GAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;aAEvC;YACD,YAAY,EAAE,WAAY;gBAEzB,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,AAAC;gBACrC,GAAG,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;gBACjB,GAAG,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;gBACjB,GAAG,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;aAEjB;YACD,SAAS,EAAE,SAAW,CAAC,EAAG;gBAEzB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,AAAC;gBACrB,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,AAAC;gBACrC,GAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;aAEvC;YACD,OAAO,EAAE,SAAW,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG;gBAErD,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,AAAC;gBAClC,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAE,CAAC,EAAE,IAAI,CAAE,AAAC;gBAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAE,CAAC,EAAE,IAAI,CAAE,AAAC;gBAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAE,CAAC,EAAE,IAAI,CAAE,AAAC;gBAC1C,IAAI,CAAC,SAAS,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,CAAC;gBAC7B,IAAI,CAAC,QAAQ,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,CAAC,CAAC,UAAU;gBAEvC,IAAK,EAAE,KAAK,SAAS,IAAI,EAAE,KAAK,EAAE,EAAG;oBAEpC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,AAAC;oBACjC,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAE,EAAE,EAAE,IAAI,CAAE,CAAC;oBACvC,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAE,EAAE,EAAE,IAAI,CAAE,CAAC;oBACvC,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAE,EAAE,EAAE,IAAI,CAAE,CAAC;oBACvC,IAAI,CAAC,SAAS,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,CAAC;iBAE7B,MAEA,IAAI,CAAC,aAAa,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,CAAC;gBAEjC,CAAC,MAAM;gBAGR,IAAK,EAAE,KAAK,SAAS,IAAI,EAAE,KAAK,EAAE,EAAG;oBAEpC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,AAAC;oBAC9B,EAAE,GAAG,IAAI,CAAC,YAAY,CAAE,EAAE,EAAE,KAAK,CAAE,CAAC;oBACpC,EAAE,GAAG,IAAI,CAAC,YAAY,CAAE,EAAE,EAAE,KAAK,CAAE,CAAC;oBACpC,EAAE,GAAG,IAAI,CAAC,YAAY,CAAE,EAAE,EAAE,KAAK,CAAE,CAAC;oBACpC,IAAI,CAAC,KAAK,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,CAAC;oBACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC;iBAEzC,MAEA,6DAA6D;gBAC7D,IAAI,CAAC,YAAY,EAAE,CAAC;aAIrB;YACD,gBAAgB,EAAE,SAAW,QAAQ,EAAG;gBAEvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC;gBACrC,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,AAAC;gBAElC,IAAM,IAAI,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAG,CAAG;oBAEtD,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAE,QAAQ,CAAE,EAAE,CAAE,EAAE,IAAI,CAAE,AAAC;oBAC5D,IAAI,CAAC,cAAc,CAAE,KAAK,CAAE,CAAC;oBAC7B,IAAI,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;iBAEvB;aAED;YACD,eAAe,EAAE,SAAW,QAAQ,EAAE,GAAG,EAAG;gBAE3C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC;gBACnC,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,AAAC;gBAClC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,AAAC;gBAE9B,IAAM,IAAI,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAG,CAEnD,IAAI,CAAC,aAAa,CAAE,IAAI,CAAC,gBAAgB,CAAE,QAAQ,CAAE,EAAE,CAAE,EAAE,IAAI,CAAE,CAAE,CAAC;gBAIrE,IAAM,IAAI,GAAG,GAAG,CAAC,EAAE,EAAC,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,EAAC,EAAE,GAAG,EAAG,CAEjD,IAAI,CAAC,SAAS,CAAE,IAAI,CAAC,YAAY,CAAE,GAAG,CAAE,GAAG,CAAE,EAAE,KAAK,CAAE,CAAE,CAAC;aAI1D;SACD,AAAC;QACF,KAAK,CAAC,WAAW,CAAE,EAAE,EAAE,KAAK,CAAE,CAAC;QAC/B,OAAO,KAAK,CAAC;KAEb,CAAC,EAAE;IAGJ,MAAM,SAAS,SAAS,KAAK,CAAC,MAAM;QAEnC,YAAa,OAAO,CAAG;YAEtB,KAAK,CAAE,OAAO,CAAE,CAAC;YACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SAEtB;QAED,IAAI,CAAE,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAG;YAExC,MAAM,KAAK,GAAG,IAAI,AAAC;YACnB,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,UAAU,CAAE,IAAI,CAAC,OAAO,CAAE,AAAC;YACpD,MAAM,CAAC,OAAO,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;YAC5B,MAAM,CAAC,gBAAgB,CAAE,IAAI,CAAC,aAAa,CAAE,CAAC;YAC9C,MAAM,CAAC,kBAAkB,CAAE,IAAI,CAAC,eAAe,CAAE,CAAC;YAClD,MAAM,CAAC,IAAI,CAAE,GAAG,EAAE,SAAW,IAAI,EAAG;gBAEnC,IAAI;oBAEH,MAAM,CAAE,KAAK,CAAC,KAAK,CAAE,IAAI,CAAE,CAAE,CAAC;iBAE9B,CAAC,OAAQ,CAAC,EAAG;oBAEb,IAAK,OAAO,EAEX,OAAO,CAAE,CAAC,CAAE,CAAC;yBAIb,OAAO,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC;oBAIpB,KAAK,CAAC,OAAO,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;iBAE/B;aAED,EAAE,UAAU,EAAE,OAAO,CAAE,CAAC;SAEzB;QAED,YAAY,CAAE,SAAS,EAAG;YAEzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,OAAO,IAAI,CAAC;SAEZ;QAED,KAAK,CAAE,IAAI,EAAG;YAEb,MAAM,KAAK,GAAG,IAAI,WAAW,EAAE,AAAC;YAEhC,IAAK,IAAI,CAAC,OAAO,CAAE,MAAM,CAAE,KAAK,EAAG,EAElC,kEAAkE;YAClE,IAAI,GAAG,IAAI,CAAC,OAAO,UAAW,IAAI,CAAE,CAAC;YAItC,IAAK,IAAI,CAAC,OAAO,CAAE,MAAM,CAAE,KAAK,EAAG,EAElC,4DAA4D;YAC5D,IAAI,GAAG,IAAI,CAAC,OAAO,UAAW,EAAE,CAAE,CAAC;YAIpC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE,AAAC;YACjC,IAAI,IAAI,GAAG,EAAE,EACZ,aAAa,GAAG,EAAE,AAAC;YACpB,IAAI,UAAU,GAAG,CAAC,AAAC;YACnB,IAAI,MAAM,GAAG,EAAE,AAAC,EAAC,+DAA+D;YAEhF,MAAM,QAAQ,GAAG,OAAO,EAAE,CAAC,QAAQ,KAAK,UAAU,AAAC;YAEnD,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,CAAG;gBAEhD,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;gBAClB,IAAI,GAAG,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;gBAChD,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;gBACzB,IAAK,UAAU,KAAK,CAAC,EAAG,SAAS;gBACjC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC,CAAC,wCAAwC;gBAE1E,IAAK,aAAa,KAAK,GAAG,EAAG,SAAS;gBAEtC,IAAK,aAAa,KAAK,GAAG,EAAG;oBAE5B,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,OAAS,AAAC;oBAEjC,OAAS,IAAI,CAAE,CAAC,CAAE;wBAEjB,KAAK,GAAG;4BACP,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAE,UAAU,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE,EAAE,UAAU,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE,EAAE,UAAU,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE,CAAE,CAAC;4BAEjG,IAAK,IAAI,CAAC,MAAM,IAAI,CAAC,EAAG;gCAEvB,MAAM,CAAC,MAAM,CAAE,UAAU,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE,EAAE,UAAU,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE,EAAE,UAAU,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE,CAAE,CAAC,mBAAmB,EAAE,CAAC;gCAEjH,KAAK,CAAC,MAAM,CAAC,IAAI,CAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAE,CAAC;6BAElD,MAEA,+EAA+E;4BAC/E,KAAK,CAAC,MAAM,CAAC,IAAI,CAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAE,CAAC;4BAItD,MAAM;wBAEP,KAAK,IAAI;4BACR,KAAK,CAAC,OAAO,CAAC,IAAI,CAAE,UAAU,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE,EAAE,UAAU,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE,EAAE,UAAU,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE,CAAE,CAAC;4BAChG,MAAM;wBAEP,KAAK,IAAI;4BACR,KAAK,CAAC,GAAG,CAAC,IAAI,CAAE,UAAU,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE,EAAE,UAAU,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE,CAAE,CAAC;4BACnE,MAAM;qBAEP;iBAED,MAAM,IAAK,aAAa,KAAK,GAAG,EAAG;oBAEnC,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,IAAI,EAAE,AAAC;oBACxC,MAAM,UAAU,GAAG,QAAQ,CAAC,KAAK,OAAS,AAAC;oBAC3C,MAAM,YAAY,GAAG,EAAE,AAAC,EAAC,8DAA8D;oBAEvF,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,CAAG;wBAEvD,MAAM,MAAM,GAAG,UAAU,CAAE,CAAC,CAAE,AAAC;wBAE/B,IAAK,MAAM,CAAC,MAAM,GAAG,CAAC,EAAG;4BAExB,MAAM,WAAW,GAAG,MAAM,CAAC,KAAK,CAAE,GAAG,CAAE,AAAC;4BACxC,YAAY,CAAC,IAAI,CAAE,WAAW,CAAE,CAAC;yBAEjC;qBAED,CAAC,qFAAqF;oBAGvF,MAAM,EAAE,GAAG,YAAY,CAAE,CAAC,CAAE,AAAC;oBAE7B,IAAM,IAAI,EAAC,GAAG,CAAC,EAAE,GAAE,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,EAAC,GAAG,GAAE,EAAE,EAAC,EAAG,CAAG;wBAE7D,MAAM,EAAE,GAAG,YAAY,CAAE,EAAC,CAAE,AAAC;wBAC7B,MAAM,EAAE,GAAG,YAAY,CAAE,EAAC,GAAG,CAAC,CAAE,AAAC;wBACjC,KAAK,CAAC,OAAO,CAAE,EAAE,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAC,CAAE,CAAE,CAAC;qBAEjG;iBAED,MAAM,IAAK,aAAa,KAAK,GAAG,EAAG;oBAEnC,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAE,CAAC,CAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAE,GAAG,CAAE,AAAC;oBAC1D,IAAI,YAAY,GAAG,EAAE,AAAC;oBACtB,MAAM,OAAO,GAAG,EAAE,AAAC;oBAEnB,IAAK,IAAI,CAAC,OAAO,CAAE,GAAG,CAAE,KAAK,EAAG,EAE/B,YAAY,GAAG,SAAS,CAAC;yBAIzB,IAAM,IAAI,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAG,CAAG;wBAE7D,MAAM,KAAK,GAAG,SAAS,CAAE,EAAE,CAAE,CAAC,KAAK,CAAE,GAAG,CAAE,AAAC;wBAC3C,IAAK,KAAK,CAAE,CAAC,CAAE,KAAK,EAAE,EAAG,YAAY,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC,CAAE,CAAE,CAAC;wBACzD,IAAK,KAAK,CAAE,CAAC,CAAE,KAAK,EAAE,EAAG,OAAO,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC,CAAE,CAAE,CAAC;qBAEpD;oBAIF,KAAK,CAAC,eAAe,CAAE,YAAY,EAAE,OAAO,CAAE,CAAC;iBAE/C,MAAM,IAAK,aAAa,KAAK,GAAG,EAAG;oBAEnC,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,IAAI,EAAE,AAAC;oBACxC,MAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAE,GAAG,CAAE,AAAC;oBACxC,KAAK,CAAC,gBAAgB,CAAE,SAAS,CAAE,CAAC;iBAEpC,MAAM,IAAK,AAAE,CAAA,MAAM,GAAG,eAAe,CAAC,IAAI,CAAE,IAAI,CAAE,CAAA,KAAO,IAAI,EAAG;oBAEhE,gBAAgB;oBAChB,KAAK;oBACL,eAAe;oBACf,mEAAmE;oBACnE,4CAA4C;oBAC5C,MAAM,IAAI,GAAG,AAAE,CAAA,GAAG,GAAG,MAAM,CAAE,CAAC,CAAE,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,IAAI,EAAE,CAAA,CAAG,KAAK,CAAE,CAAC,CAAE,AAAC;oBAChE,KAAK,CAAC,WAAW,CAAE,IAAI,CAAE,CAAC;iBAE1B,MAAM,IAAK,qBAAqB,CAAC,IAAI,CAAE,IAAI,CAAE,EAE7C,WAAW;gBACX,KAAK,CAAC,MAAM,CAAC,aAAa,CAAE,IAAI,CAAC,SAAS,CAAE,CAAC,CAAE,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,iBAAiB,CAAE,CAAC;qBAE5E,IAAK,yBAAyB,CAAC,IAAI,CAAE,IAAI,CAAE,EAEjD,WAAW;gBACX,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAE,IAAI,CAAC,SAAS,CAAE,CAAC,CAAE,CAAC,IAAI,EAAE,CAAE,CAAC;qBAErD,IAAK,gBAAgB,CAAC,IAAI,CAAE,IAAI,CAAE,EAExC,yFAAyF;gBACzF,uHAAuH;gBACvH,OAAO,CAAC,IAAI,CAAE,sGAAsG,CAAE,CAAC;qBAEjH,IAAK,aAAa,KAAK,GAAG,EAAG;oBAEnC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAE,GAAG,CAAE,CAAC,CAAC,iBAAiB;oBAC7C,6FAA6F;oBAC7F,kDAAkD;oBAClD,kGAAkG;oBAClG,oGAAoG;oBACpG,iDAAiD;oBACjD,2DAA2D;oBAE3D,ogBAQO,CAEP,IAAK,MAAM,CAAC,MAAM,GAAG,CAAC,EAAG;wBAExB,MAAM,KAAK,GAAG,MAAM,CAAE,CAAC,CAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,AAAC;wBAC/C,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,KAAK,GAAG,IAAI,KAAK,KAAK,KAAK,CAAC;qBAEvD,MAEA,sCAAsC;oBACtC,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;oBAI5B,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,eAAe,EAAE,AAAC;oBAChD,IAAK,QAAQ,EAAG,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;iBAEtD,MAAM;oBAEN,iDAAiD;oBACjD,IAAK,IAAI,KAAK,IAAI,EAAG,SAAS;oBAC9B,OAAO,CAAC,IAAI,CAAE,qCAAqC,GAAG,IAAI,GAAG,GAAG,CAAE,CAAC;iBAEnE;aAED;YAED,KAAK,CAAC,QAAQ,EAAE,CAAC;YACjB,MAAM,SAAS,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,AAAC;YACpC,SAAS,CAAC,iBAAiB,GAAG,EAAE,CAAC,MAAM,CAAE,KAAK,CAAC,iBAAiB,CAAE,CAAC;YACnE,MAAM,aAAa,GAAG,CAAI,CAAA,KAAK,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAA,AAAE,AAAC;YAE5G,IAAK,aAAa,KAAK,IAAI,EAE1B,IAAM,IAAI,EAAC,GAAG,CAAC,EAAE,EAAC,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,EAAG,CAAG;gBAExD,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAE,EAAC,CAAE,AAAC;gBAClC,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,AAAC;gBACjC,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,AAAC;gBACnC,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,KAAK,MAAM,AAAC;gBACxC,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,KAAK,QAAQ,AAAC;gBAC5C,IAAI,eAAe,GAAG,KAAK,AAAC,EAAC,gEAAgE;gBAE7F,IAAK,QAAQ,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAG,SAAS;gBAC/C,MAAM,cAAc,GAAG,IAAI,KAAK,CAAC,cAAc,EAAE,AAAC;gBAClD,cAAc,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,KAAK,CAAC,sBAAsB,CAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;gBAEpG,IAAK,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAE/B,cAAc,CAAC,YAAY,CAAE,QAAQ,EAAE,IAAI,KAAK,CAAC,sBAAsB,CAAE,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAE,CAAE,CAAC;gBAIlG,IAAK,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAG;oBAEjC,eAAe,GAAG,IAAI,CAAC;oBACvB,cAAc,CAAC,YAAY,CAAE,OAAO,EAAE,IAAI,KAAK,CAAC,sBAAsB,CAAE,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAE,CAAE,CAAC;iBAE/F;gBAED,IAAK,QAAQ,CAAC,YAAY,KAAK,IAAI,EAElC,cAAc,CAAC,YAAY,CAAE,IAAI,EAAE,IAAI,KAAK,CAAC,sBAAsB,CAAE,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAE,CAAE,CAAC;gBAEzF,CAAC,mBAAmB;gBAGrB,MAAM,gBAAgB,GAAG,EAAE,AAAC;gBAE5B,IAAM,IAAI,EAAE,GAAG,CAAC,EAAE,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,GAAG,KAAK,EAAE,EAAE,EAAG,CAAG;oBAE/D,MAAM,cAAc,GAAG,SAAS,CAAE,EAAE,CAAE,AAAC;oBACvC,MAAM,YAAY,GAAG,cAAc,CAAC,IAAI,GAAG,GAAG,GAAG,cAAc,CAAC,MAAM,GAAG,GAAG,GAAG,eAAe,AAAC;oBAC/F,IAAI,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAE,YAAY,CAAE,AAAC;oBAE/C,IAAK,IAAI,CAAC,SAAS,KAAK,IAAI,EAAG;wBAE9B,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAE,cAAc,CAAC,IAAI,CAAE,CAAC,CAAC,uGAAuG;wBAEhK,IAAK,MAAM,IAAI,QAAQ,IAAI,CAAI,CAAA,QAAQ,YAAY,KAAK,CAAC,iBAAiB,CAAA,AAAE,EAAG;4BAE9E,MAAM,YAAY,GAAG,IAAI,KAAK,CAAC,iBAAiB,EAAE,AAAC;4BACnD,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAE,YAAY,EAAE,QAAQ,CAAE,CAAC;4BAC7D,YAAY,CAAC,KAAK,CAAC,IAAI,CAAE,QAAQ,CAAC,KAAK,CAAE,CAAC;4BAC1C,QAAQ,GAAG,YAAY,CAAC;yBAExB,MAAM,IAAK,QAAQ,IAAI,QAAQ,IAAI,CAAI,CAAA,QAAQ,YAAY,KAAK,CAAC,cAAc,CAAA,AAAE,EAAG;4BAEpF,MAAM,cAAc,GAAG,IAAI,KAAK,CAAC,cAAc,CAAE;gCAChD,IAAI,EAAE,EAAE;gCACR,eAAe,EAAE,KAAK;6BACtB,CAAE,AAAC;4BACJ,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAE,cAAc,EAAE,QAAQ,CAAE,CAAC;4BAC/D,cAAc,CAAC,KAAK,CAAC,IAAI,CAAE,QAAQ,CAAC,KAAK,CAAE,CAAC;4BAC5C,cAAc,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;4BAClC,QAAQ,GAAG,cAAc,CAAC;yBAE1B;qBAED;oBAED,IAAK,QAAQ,KAAK,SAAS,EAAG;wBAE7B,IAAK,MAAM,EAEV,QAAQ,GAAG,IAAI,KAAK,CAAC,iBAAiB,EAAE,CAAC;6BAEnC,IAAK,QAAQ,EAEnB,QAAQ,GAAG,IAAI,KAAK,CAAC,cAAc,CAAE;4BACpC,IAAI,EAAE,CAAC;4BACP,eAAe,EAAE,KAAK;yBACtB,CAAE,CAAC;6BAIJ,QAAQ,GAAG,IAAI,KAAK,CAAC,iBAAiB,EAAE,CAAC;wBAI1C,QAAQ,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC;wBACpC,QAAQ,CAAC,WAAW,GAAG,cAAc,CAAC,MAAM,GAAG,KAAK,GAAG,IAAI,CAAC;wBAC5D,QAAQ,CAAC,YAAY,GAAG,eAAe,CAAC;wBACxC,KAAK,CAAC,SAAS,CAAE,YAAY,CAAE,GAAG,QAAQ,CAAC;qBAE3C;oBAED,gBAAgB,CAAC,IAAI,CAAE,QAAQ,CAAE,CAAC;iBAElC,CAAC,cAAc;gBAGhB,IAAI,IAAI,AAAC;gBAET,IAAK,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAG;oBAElC,IAAM,IAAI,EAAE,GAAG,CAAC,EAAE,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,GAAG,KAAK,EAAE,EAAE,EAAG,CAAG;wBAE/D,MAAM,cAAc,GAAG,SAAS,CAAE,EAAE,CAAE,AAAC;wBACvC,cAAc,CAAC,QAAQ,CAAE,cAAc,CAAC,UAAU,EAAE,cAAc,CAAC,UAAU,EAAE,EAAE,CAAE,CAAC;qBAEpF;oBAED,IAAK,MAAM,EAEV,IAAI,GAAG,IAAI,KAAK,CAAC,YAAY,CAAE,cAAc,EAAE,gBAAgB,CAAE,CAAC;yBAE5D,IAAK,QAAQ,EAEnB,IAAI,GAAG,IAAI,KAAK,CAAC,MAAM,CAAE,cAAc,EAAE,gBAAgB,CAAE,CAAC;yBAI5D,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAE,cAAc,EAAE,gBAAgB,CAAE,CAAC;iBAI3D,MAAM;oBAEN,IAAK,MAAM,EAEV,IAAI,GAAG,IAAI,KAAK,CAAC,YAAY,CAAE,cAAc,EAAE,gBAAgB,CAAE,CAAC,CAAE,CAAE,CAAC;yBAEjE,IAAK,QAAQ,EAEnB,IAAI,GAAG,IAAI,KAAK,CAAC,MAAM,CAAE,cAAc,EAAE,gBAAgB,CAAE,CAAC,CAAE,CAAE,CAAC;yBAIjE,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAE,cAAc,EAAE,gBAAgB,CAAE,CAAC,CAAE,CAAE,CAAC;iBAIhE;gBAED,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;gBACxB,SAAS,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC;aAEtB;iBAID,wGAAwG;YACxG,IAAK,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAG;gBAEhC,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,cAAc,CAAE;oBAC1C,IAAI,EAAE,CAAC;oBACP,eAAe,EAAE,KAAK;iBACtB,CAAE,AAAC;gBACJ,MAAM,cAAc,GAAG,IAAI,KAAK,CAAC,cAAc,EAAE,AAAC;gBAClD,cAAc,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,KAAK,CAAC,sBAAsB,CAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;gBAEjG,IAAK,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,MAAM,CAAE,CAAC,CAAE,KAAK,SAAS,EAAG;oBAEjE,cAAc,CAAC,YAAY,CAAE,OAAO,EAAE,IAAI,KAAK,CAAC,sBAAsB,CAAE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAE,CAAE,CAAC;oBAC5F,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC;iBAE7B;gBAED,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,MAAM,CAAE,cAAc,EAAE,QAAQ,CAAE,AAAC;gBAC5D,SAAS,CAAC,GAAG,CAAE,MAAM,CAAE,CAAC;aAExB;YAIF,OAAO,SAAS,CAAC;SAEjB;KAED;IAED,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;CAE5B,CAAA,EAAI,CAAC","sources":["public/Assets/OBJLoader.js"],"sourcesContent":["( function () {\r\n\r\n\tconst _object_pattern = /^[og]\\s*(.+)?/; // mtllib file_reference\r\n\r\n\tconst _material_library_pattern = /^mtllib /; // usemtl material_name\r\n\r\n\tconst _material_use_pattern = /^usemtl /; // usemap map_name\r\n\r\n\tconst _map_use_pattern = /^usemap /;\r\n\r\n\tconst _vA = new THREE.Vector3();\r\n\r\n\tconst _vB = new THREE.Vector3();\r\n\r\n\tconst _vC = new THREE.Vector3();\r\n\r\n\tconst _ab = new THREE.Vector3();\r\n\r\n\tconst _cb = new THREE.Vector3();\r\n\r\n\tconst _color = new THREE.Color();\r\n\r\n\tfunction ParserState() {\r\n\r\n\t\tconst state = {\r\n\t\t\tobjects: [],\r\n\t\t\tobject: {},\r\n\t\t\tvertices: [],\r\n\t\t\tnormals: [],\r\n\t\t\tcolors: [],\r\n\t\t\tuvs: [],\r\n\t\t\tmaterials: {},\r\n\t\t\tmaterialLibraries: [],\r\n\t\t\tstartObject: function ( name, fromDeclaration ) {\r\n\r\n\t\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\r\n\t\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\r\n\t\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\r\n\r\n\t\t\t\t\tthis.object.name = name;\r\n\t\t\t\t\tthis.object.fromDeclaration = fromDeclaration !== false;\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst previousMaterial = this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined;\r\n\r\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\r\n\r\n\t\t\t\t\tthis.object._finalize( true );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.object = {\r\n\t\t\t\t\tname: name || '',\r\n\t\t\t\t\tfromDeclaration: fromDeclaration !== false,\r\n\t\t\t\t\tgeometry: {\r\n\t\t\t\t\t\tvertices: [],\r\n\t\t\t\t\t\tnormals: [],\r\n\t\t\t\t\t\tcolors: [],\r\n\t\t\t\t\t\tuvs: [],\r\n\t\t\t\t\t\thasUVIndices: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmaterials: [],\r\n\t\t\t\t\tsmooth: true,\r\n\t\t\t\t\tstartMaterial: function ( name, libraries ) {\r\n\r\n\t\t\t\t\t\tconst previous = this._finalize( false ); // New usemtl declaration overwrites an inherited material, except if faces were declared\r\n\t\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\r\n\r\n\r\n\t\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\r\n\r\n\t\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst material = {\r\n\t\t\t\t\t\t\tindex: this.materials.length,\r\n\t\t\t\t\t\t\tname: name || '',\r\n\t\t\t\t\t\t\tmtllib: Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '',\r\n\t\t\t\t\t\t\tsmooth: previous !== undefined ? previous.smooth : this.smooth,\r\n\t\t\t\t\t\t\tgroupStart: previous !== undefined ? previous.groupEnd : 0,\r\n\t\t\t\t\t\t\tgroupEnd: - 1,\r\n\t\t\t\t\t\t\tgroupCount: - 1,\r\n\t\t\t\t\t\t\tinherited: false,\r\n\t\t\t\t\t\t\tclone: function ( index ) {\r\n\r\n\t\t\t\t\t\t\t\tconst cloned = {\r\n\t\t\t\t\t\t\t\t\tindex: typeof index === 'number' ? index : this.index,\r\n\t\t\t\t\t\t\t\t\tname: this.name,\r\n\t\t\t\t\t\t\t\t\tmtllib: this.mtllib,\r\n\t\t\t\t\t\t\t\t\tsmooth: this.smooth,\r\n\t\t\t\t\t\t\t\t\tgroupStart: 0,\r\n\t\t\t\t\t\t\t\t\tgroupEnd: - 1,\r\n\t\t\t\t\t\t\t\t\tgroupCount: - 1,\r\n\t\t\t\t\t\t\t\t\tinherited: false\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\r\n\t\t\t\t\t\t\t\treturn cloned;\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis.materials.push( material );\r\n\t\t\t\t\t\treturn material;\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcurrentMaterial: function () {\r\n\r\n\t\t\t\t\t\tif ( this.materials.length > 0 ) {\r\n\r\n\t\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn undefined;\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\t_finalize: function ( end ) {\r\n\r\n\t\t\t\t\t\tconst lastMultiMaterial = this.currentMaterial();\r\n\r\n\t\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\r\n\r\n\t\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\r\n\t\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\r\n\t\t\t\t\t\t\tlastMultiMaterial.inherited = false;\r\n\r\n\t\t\t\t\t\t} // Ignore objects tail materials if no face declarations followed them before a new o/g started.\r\n\r\n\r\n\t\t\t\t\t\tif ( end && this.materials.length > 1 ) {\r\n\r\n\t\t\t\t\t\t\tfor ( let mi = this.materials.length - 1; mi >= 0; mi -- ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} // Guarantee at least one empty material, this makes the creation later more straight forward.\r\n\r\n\r\n\t\t\t\t\t\tif ( end && this.materials.length === 0 ) {\r\n\r\n\t\t\t\t\t\t\tthis.materials.push( {\r\n\t\t\t\t\t\t\t\tname: '',\r\n\t\t\t\t\t\t\t\tsmooth: this.smooth\r\n\t\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn lastMultiMaterial;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}; // Inherit previous objects material.\r\n\t\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\r\n\t\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\r\n\t\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\r\n\t\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\r\n\r\n\t\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\r\n\r\n\t\t\t\t\tconst declared = previousMaterial.clone( 0 );\r\n\t\t\t\t\tdeclared.inherited = true;\r\n\t\t\t\t\tthis.object.materials.push( declared );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.objects.push( this.object );\r\n\r\n\t\t\t},\r\n\t\t\tfinalize: function () {\r\n\r\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\r\n\r\n\t\t\t\t\tthis.object._finalize( true );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\t\t\tparseVertexIndex: function ( value, len ) {\r\n\r\n\t\t\t\tconst index = parseInt( value, 10 );\r\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\r\n\r\n\t\t\t},\r\n\t\t\tparseNormalIndex: function ( value, len ) {\r\n\r\n\t\t\t\tconst index = parseInt( value, 10 );\r\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\r\n\r\n\t\t\t},\r\n\t\t\tparseUVIndex: function ( value, len ) {\r\n\r\n\t\t\t\tconst index = parseInt( value, 10 );\r\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\r\n\r\n\t\t\t},\r\n\t\t\taddVertex: function ( a, b, c ) {\r\n\r\n\t\t\t\tconst src = this.vertices;\r\n\t\t\t\tconst dst = this.object.geometry.vertices;\r\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\r\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\r\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\r\n\r\n\t\t\t},\r\n\t\t\taddVertexPoint: function ( a ) {\r\n\r\n\t\t\t\tconst src = this.vertices;\r\n\t\t\t\tconst dst = this.object.geometry.vertices;\r\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\r\n\r\n\t\t\t},\r\n\t\t\taddVertexLine: function ( a ) {\r\n\r\n\t\t\t\tconst src = this.vertices;\r\n\t\t\t\tconst dst = this.object.geometry.vertices;\r\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\r\n\r\n\t\t\t},\r\n\t\t\taddNormal: function ( a, b, c ) {\r\n\r\n\t\t\t\tconst src = this.normals;\r\n\t\t\t\tconst dst = this.object.geometry.normals;\r\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\r\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\r\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\r\n\r\n\t\t\t},\r\n\t\t\taddFaceNormal: function ( a, b, c ) {\r\n\r\n\t\t\t\tconst src = this.vertices;\r\n\t\t\t\tconst dst = this.object.geometry.normals;\r\n\r\n\t\t\t\t_vA.fromArray( src, a );\r\n\r\n\t\t\t\t_vB.fromArray( src, b );\r\n\r\n\t\t\t\t_vC.fromArray( src, c );\r\n\r\n\t\t\t\t_cb.subVectors( _vC, _vB );\r\n\r\n\t\t\t\t_ab.subVectors( _vA, _vB );\r\n\r\n\t\t\t\t_cb.cross( _ab );\r\n\r\n\t\t\t\t_cb.normalize();\r\n\r\n\t\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\r\n\t\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\r\n\t\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\r\n\r\n\t\t\t},\r\n\t\t\taddColor: function ( a, b, c ) {\r\n\r\n\t\t\t\tconst src = this.colors;\r\n\t\t\t\tconst dst = this.object.geometry.colors;\r\n\t\t\t\tif ( src[ a ] !== undefined ) dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\r\n\t\t\t\tif ( src[ b ] !== undefined ) dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\r\n\t\t\t\tif ( src[ c ] !== undefined ) dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\r\n\r\n\t\t\t},\r\n\t\t\taddUV: function ( a, b, c ) {\r\n\r\n\t\t\t\tconst src = this.uvs;\r\n\t\t\t\tconst dst = this.object.geometry.uvs;\r\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\r\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\r\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\r\n\r\n\t\t\t},\r\n\t\t\taddDefaultUV: function () {\r\n\r\n\t\t\t\tconst dst = this.object.geometry.uvs;\r\n\t\t\t\tdst.push( 0, 0 );\r\n\t\t\t\tdst.push( 0, 0 );\r\n\t\t\t\tdst.push( 0, 0 );\r\n\r\n\t\t\t},\r\n\t\t\taddUVLine: function ( a ) {\r\n\r\n\t\t\t\tconst src = this.uvs;\r\n\t\t\t\tconst dst = this.object.geometry.uvs;\r\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\r\n\r\n\t\t\t},\r\n\t\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\r\n\r\n\t\t\t\tconst vLen = this.vertices.length;\r\n\t\t\t\tlet ia = this.parseVertexIndex( a, vLen );\r\n\t\t\t\tlet ib = this.parseVertexIndex( b, vLen );\r\n\t\t\t\tlet ic = this.parseVertexIndex( c, vLen );\r\n\t\t\t\tthis.addVertex( ia, ib, ic );\r\n\t\t\t\tthis.addColor( ia, ib, ic ); // normals\r\n\r\n\t\t\t\tif ( na !== undefined && na !== '' ) {\r\n\r\n\t\t\t\t\tconst nLen = this.normals.length;\r\n\t\t\t\t\tia = this.parseNormalIndex( na, nLen );\r\n\t\t\t\t\tib = this.parseNormalIndex( nb, nLen );\r\n\t\t\t\t\tic = this.parseNormalIndex( nc, nLen );\r\n\t\t\t\t\tthis.addNormal( ia, ib, ic );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.addFaceNormal( ia, ib, ic );\r\n\r\n\t\t\t\t} // uvs\r\n\r\n\r\n\t\t\t\tif ( ua !== undefined && ua !== '' ) {\r\n\r\n\t\t\t\t\tconst uvLen = this.uvs.length;\r\n\t\t\t\t\tia = this.parseUVIndex( ua, uvLen );\r\n\t\t\t\t\tib = this.parseUVIndex( ub, uvLen );\r\n\t\t\t\t\tic = this.parseUVIndex( uc, uvLen );\r\n\t\t\t\t\tthis.addUV( ia, ib, ic );\r\n\t\t\t\t\tthis.object.geometry.hasUVIndices = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// add placeholder values (for inconsistent face definitions)\r\n\t\t\t\t\tthis.addDefaultUV();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\t\t\taddPointGeometry: function ( vertices ) {\r\n\r\n\t\t\t\tthis.object.geometry.type = 'Points';\r\n\t\t\t\tconst vLen = this.vertices.length;\r\n\r\n\t\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\r\n\r\n\t\t\t\t\tconst index = this.parseVertexIndex( vertices[ vi ], vLen );\r\n\t\t\t\t\tthis.addVertexPoint( index );\r\n\t\t\t\t\tthis.addColor( index );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\t\t\taddLineGeometry: function ( vertices, uvs ) {\r\n\r\n\t\t\t\tthis.object.geometry.type = 'Line';\r\n\t\t\t\tconst vLen = this.vertices.length;\r\n\t\t\t\tconst uvLen = this.uvs.length;\r\n\r\n\t\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\r\n\r\n\t\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( let uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\r\n\r\n\t\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t};\r\n\t\tstate.startObject( '', false );\r\n\t\treturn state;\r\n\r\n\t} //\r\n\r\n\r\n\tclass OBJLoader extends THREE.Loader {\r\n\r\n\t\tconstructor( manager ) {\r\n\r\n\t\t\tsuper( manager );\r\n\t\t\tthis.materials = null;\r\n\r\n\t\t}\r\n\r\n\t\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tconst scope = this;\r\n\t\t\tconst loader = new THREE.FileLoader( this.manager );\r\n\t\t\tloader.setPath( this.path );\r\n\t\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tonLoad( scope.parse( text ) );\r\n\r\n\t\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t\tsetMaterials( materials ) {\r\n\r\n\t\t\tthis.materials = materials;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tparse( text ) {\r\n\r\n\t\t\tconst state = new ParserState();\r\n\r\n\t\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\r\n\r\n\t\t\t\t// This is faster than String.split with regex that splits on both\r\n\t\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\r\n\r\n\t\t\t\t// join lines separated by a line continuation character (\\)\r\n\t\t\t\ttext = text.replace( /\\\\\\n/g, '' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst lines = text.split( '\\n' );\r\n\t\t\tlet line = '',\r\n\t\t\t\tlineFirstChar = '';\r\n\t\t\tlet lineLength = 0;\r\n\t\t\tlet result = []; // Faster to just trim left side of the line. Use if available.\r\n\r\n\t\t\tconst trimLeft = typeof ''.trimLeft === 'function';\r\n\r\n\t\t\tfor ( let i = 0, l = lines.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tline = lines[ i ];\r\n\t\t\t\tline = trimLeft ? line.trimLeft() : line.trim();\r\n\t\t\t\tlineLength = line.length;\r\n\t\t\t\tif ( lineLength === 0 ) continue;\r\n\t\t\t\tlineFirstChar = line.charAt( 0 ); // @todo invoke passed in handler if any\r\n\r\n\t\t\t\tif ( lineFirstChar === '#' ) continue;\r\n\r\n\t\t\t\tif ( lineFirstChar === 'v' ) {\r\n\r\n\t\t\t\t\tconst data = line.split( /\\s+/ );\r\n\r\n\t\t\t\t\tswitch ( data[ 0 ] ) {\r\n\r\n\t\t\t\t\t\tcase 'v':\r\n\t\t\t\t\t\t\tstate.vertices.push( parseFloat( data[ 1 ] ), parseFloat( data[ 2 ] ), parseFloat( data[ 3 ] ) );\r\n\r\n\t\t\t\t\t\t\tif ( data.length >= 7 ) {\r\n\r\n\t\t\t\t\t\t\t\t_color.setRGB( parseFloat( data[ 4 ] ), parseFloat( data[ 5 ] ), parseFloat( data[ 6 ] ) ).convertSRGBToLinear();\r\n\r\n\t\t\t\t\t\t\t\tstate.colors.push( _color.r, _color.g, _color.b );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t// if no colors are defined, add placeholders so color and vertex indices match\r\n\t\t\t\t\t\t\t\tstate.colors.push( undefined, undefined, undefined );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'vn':\r\n\t\t\t\t\t\t\tstate.normals.push( parseFloat( data[ 1 ] ), parseFloat( data[ 2 ] ), parseFloat( data[ 3 ] ) );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'vt':\r\n\t\t\t\t\t\t\tstate.uvs.push( parseFloat( data[ 1 ] ), parseFloat( data[ 2 ] ) );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( lineFirstChar === 'f' ) {\r\n\r\n\t\t\t\t\tconst lineData = line.slice( 1 ).trim();\r\n\t\t\t\t\tconst vertexData = lineData.split( /\\s+/ );\r\n\t\t\t\t\tconst faceVertices = []; // Parse the face vertex data into an easy to work with format\r\n\r\n\t\t\t\t\tfor ( let j = 0, jl = vertexData.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tconst vertex = vertexData[ j ];\r\n\r\n\t\t\t\t\t\tif ( vertex.length > 0 ) {\r\n\r\n\t\t\t\t\t\t\tconst vertexParts = vertex.split( '/' );\r\n\t\t\t\t\t\t\tfaceVertices.push( vertexParts );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\r\n\r\n\r\n\t\t\t\t\tconst v1 = faceVertices[ 0 ];\r\n\r\n\t\t\t\t\tfor ( let j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tconst v2 = faceVertices[ j ];\r\n\t\t\t\t\t\tconst v3 = faceVertices[ j + 1 ];\r\n\t\t\t\t\t\tstate.addFace( v1[ 0 ], v2[ 0 ], v3[ 0 ], v1[ 1 ], v2[ 1 ], v3[ 1 ], v1[ 2 ], v2[ 2 ], v3[ 2 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( lineFirstChar === 'l' ) {\r\n\r\n\t\t\t\t\tconst lineParts = line.substring( 1 ).trim().split( ' ' );\r\n\t\t\t\t\tlet lineVertices = [];\r\n\t\t\t\t\tconst lineUVs = [];\r\n\r\n\t\t\t\t\tif ( line.indexOf( '/' ) === - 1 ) {\r\n\r\n\t\t\t\t\t\tlineVertices = lineParts;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tfor ( let li = 0, llen = lineParts.length; li < llen; li ++ ) {\r\n\r\n\t\t\t\t\t\t\tconst parts = lineParts[ li ].split( '/' );\r\n\t\t\t\t\t\t\tif ( parts[ 0 ] !== '' ) lineVertices.push( parts[ 0 ] );\r\n\t\t\t\t\t\t\tif ( parts[ 1 ] !== '' ) lineUVs.push( parts[ 1 ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\r\n\r\n\t\t\t\t} else if ( lineFirstChar === 'p' ) {\r\n\r\n\t\t\t\t\tconst lineData = line.slice( 1 ).trim();\r\n\t\t\t\t\tconst pointData = lineData.split( ' ' );\r\n\t\t\t\t\tstate.addPointGeometry( pointData );\r\n\r\n\t\t\t\t} else if ( ( result = _object_pattern.exec( line ) ) !== null ) {\r\n\r\n\t\t\t\t\t// o object_name\r\n\t\t\t\t\t// or\r\n\t\t\t\t\t// g group_name\r\n\t\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\r\n\t\t\t\t\t// let name = result[ 0 ].slice( 1 ).trim();\r\n\t\t\t\t\tconst name = ( ' ' + result[ 0 ].slice( 1 ).trim() ).slice( 1 );\r\n\t\t\t\t\tstate.startObject( name );\r\n\r\n\t\t\t\t} else if ( _material_use_pattern.test( line ) ) {\r\n\r\n\t\t\t\t\t// material\r\n\t\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\r\n\r\n\t\t\t\t} else if ( _material_library_pattern.test( line ) ) {\r\n\r\n\t\t\t\t\t// mtl file\r\n\t\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\r\n\r\n\t\t\t\t} else if ( _map_use_pattern.test( line ) ) {\r\n\r\n\t\t\t\t\t// the line is parsed but ignored since the loader assumes textures are defined MTL files\r\n\t\t\t\t\t// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\r\n\t\t\t\t\tconsole.warn( 'THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.' );\r\n\r\n\t\t\t\t} else if ( lineFirstChar === 's' ) {\r\n\r\n\t\t\t\t\tresult = line.split( ' ' ); // smooth shading\r\n\t\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\r\n\t\t\t\t\t// but does not define a usemtl for each face set.\r\n\t\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\r\n\t\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\r\n\t\t\t\t\t// where explicit usemtl defines geometry groups.\r\n\t\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\r\n\r\n\t\t\t\t\t/*\r\n        \t * http://paulbourke.net/dataformats/obj/\r\n        \t *\r\n        \t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\r\n        \t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\r\n        \t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\r\n        \t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\r\n        \t * than 0.\"\r\n        \t */\r\n\r\n\t\t\t\t\tif ( result.length > 1 ) {\r\n\r\n\t\t\t\t\t\tconst value = result[ 1 ].trim().toLowerCase();\r\n\t\t\t\t\t\tstate.object.smooth = value !== '0' && value !== 'off';\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\r\n\t\t\t\t\t\tstate.object.smooth = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst material = state.object.currentMaterial();\r\n\t\t\t\t\tif ( material ) material.smooth = state.object.smooth;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// Handle null terminated files without exception\r\n\t\t\t\t\tif ( line === '\\0' ) continue;\r\n\t\t\t\t\tconsole.warn( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.finalize();\r\n\t\t\tconst container = new THREE.Group();\r\n\t\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\r\n\t\t\tconst hasPrimitives = ! ( state.objects.length === 1 && state.objects[ 0 ].geometry.vertices.length === 0 );\r\n\r\n\t\t\tif ( hasPrimitives === true ) {\r\n\r\n\t\t\t\tfor ( let i = 0, l = state.objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tconst object = state.objects[ i ];\r\n\t\t\t\t\tconst geometry = object.geometry;\r\n\t\t\t\t\tconst materials = object.materials;\r\n\t\t\t\t\tconst isLine = geometry.type === 'Line';\r\n\t\t\t\t\tconst isPoints = geometry.type === 'Points';\r\n\t\t\t\t\tlet hasVertexColors = false; // Skip o/g line declarations that did not follow with any faces\r\n\r\n\t\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\r\n\t\t\t\t\tconst buffergeometry = new THREE.BufferGeometry();\r\n\t\t\t\t\tbuffergeometry.setAttribute( 'position', new THREE.Float32BufferAttribute( geometry.vertices, 3 ) );\r\n\r\n\t\t\t\t\tif ( geometry.normals.length > 0 ) {\r\n\r\n\t\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new THREE.Float32BufferAttribute( geometry.normals, 3 ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( geometry.colors.length > 0 ) {\r\n\r\n\t\t\t\t\t\thasVertexColors = true;\r\n\t\t\t\t\t\tbuffergeometry.setAttribute( 'color', new THREE.Float32BufferAttribute( geometry.colors, 3 ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( geometry.hasUVIndices === true ) {\r\n\r\n\t\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new THREE.Float32BufferAttribute( geometry.uvs, 2 ) );\r\n\r\n\t\t\t\t\t} // Create materials\r\n\r\n\r\n\t\t\t\t\tconst createdMaterials = [];\r\n\r\n\t\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\r\n\r\n\t\t\t\t\t\tconst sourceMaterial = materials[ mi ];\r\n\t\t\t\t\t\tconst materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\r\n\t\t\t\t\t\tlet material = state.materials[ materialHash ];\r\n\r\n\t\t\t\t\t\tif ( this.materials !== null ) {\r\n\r\n\t\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name ); // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\r\n\r\n\t\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof THREE.LineBasicMaterial ) ) {\r\n\r\n\t\t\t\t\t\t\t\tconst materialLine = new THREE.LineBasicMaterial();\r\n\t\t\t\t\t\t\t\tTHREE.Material.prototype.copy.call( materialLine, material );\r\n\t\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\r\n\t\t\t\t\t\t\t\tmaterial = materialLine;\r\n\r\n\t\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof THREE.PointsMaterial ) ) {\r\n\r\n\t\t\t\t\t\t\t\tconst materialPoints = new THREE.PointsMaterial( {\r\n\t\t\t\t\t\t\t\t\tsize: 10,\r\n\t\t\t\t\t\t\t\t\tsizeAttenuation: false\r\n\t\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t\t\tTHREE.Material.prototype.copy.call( materialPoints, material );\r\n\t\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\r\n\t\t\t\t\t\t\t\tmaterialPoints.map = material.map;\r\n\t\t\t\t\t\t\t\tmaterial = materialPoints;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( material === undefined ) {\r\n\r\n\t\t\t\t\t\t\tif ( isLine ) {\r\n\r\n\t\t\t\t\t\t\t\tmaterial = new THREE.LineBasicMaterial();\r\n\r\n\t\t\t\t\t\t\t} else if ( isPoints ) {\r\n\r\n\t\t\t\t\t\t\t\tmaterial = new THREE.PointsMaterial( {\r\n\t\t\t\t\t\t\t\t\tsize: 1,\r\n\t\t\t\t\t\t\t\t\tsizeAttenuation: false\r\n\t\t\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tmaterial = new THREE.MeshPhongMaterial();\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\r\n\t\t\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\r\n\t\t\t\t\t\t\tmaterial.vertexColors = hasVertexColors;\r\n\t\t\t\t\t\t\tstate.materials[ materialHash ] = material;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcreatedMaterials.push( material );\r\n\r\n\t\t\t\t\t} // Create mesh\r\n\r\n\r\n\t\t\t\t\tlet mesh;\r\n\r\n\t\t\t\t\tif ( createdMaterials.length > 1 ) {\r\n\r\n\t\t\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\r\n\r\n\t\t\t\t\t\t\tconst sourceMaterial = materials[ mi ];\r\n\t\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( isLine ) {\r\n\r\n\t\t\t\t\t\t\tmesh = new THREE.LineSegments( buffergeometry, createdMaterials );\r\n\r\n\t\t\t\t\t\t} else if ( isPoints ) {\r\n\r\n\t\t\t\t\t\t\tmesh = new THREE.Points( buffergeometry, createdMaterials );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tmesh = new THREE.Mesh( buffergeometry, createdMaterials );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( isLine ) {\r\n\r\n\t\t\t\t\t\t\tmesh = new THREE.LineSegments( buffergeometry, createdMaterials[ 0 ] );\r\n\r\n\t\t\t\t\t\t} else if ( isPoints ) {\r\n\r\n\t\t\t\t\t\t\tmesh = new THREE.Points( buffergeometry, createdMaterials[ 0 ] );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tmesh = new THREE.Mesh( buffergeometry, createdMaterials[ 0 ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmesh.name = object.name;\r\n\t\t\t\t\tcontainer.add( mesh );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// if there is only the default parser state object with no geometry data, interpret data as point cloud\r\n\t\t\t\tif ( state.vertices.length > 0 ) {\r\n\r\n\t\t\t\t\tconst material = new THREE.PointsMaterial( {\r\n\t\t\t\t\t\tsize: 1,\r\n\t\t\t\t\t\tsizeAttenuation: false\r\n\t\t\t\t\t} );\r\n\t\t\t\t\tconst buffergeometry = new THREE.BufferGeometry();\r\n\t\t\t\t\tbuffergeometry.setAttribute( 'position', new THREE.Float32BufferAttribute( state.vertices, 3 ) );\r\n\r\n\t\t\t\t\tif ( state.colors.length > 0 && state.colors[ 0 ] !== undefined ) {\r\n\r\n\t\t\t\t\t\tbuffergeometry.setAttribute( 'color', new THREE.Float32BufferAttribute( state.colors, 3 ) );\r\n\t\t\t\t\t\tmaterial.vertexColors = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst points = new THREE.Points( buffergeometry, material );\r\n\t\t\t\t\tcontainer.add( points );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn container;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTHREE.OBJLoader = OBJLoader;\r\n\r\n} )();\r\n"],"names":[],"version":3,"file":"newScene.1c1950aa.js.map","sourceRoot":"/__parcel_source_root/"}